

export default function Home() {
  const user = useSelector((state) => state.user.value);
  const userId = useSelector((state) => state.user.id);
  const userLoaded = useSelector((state) => state.user.loaded);
  const router = useRouter();

  const [post, setPost] = useState(-1); // -1 when the page is just loaded; undefined when there's no post

  useEffect(() => {
    //logOut(); // for testing
    async function getPost() {
      const lastPost = await getUserLastPost(userId);
      setPost(lastPost); // if no last post, lastPost is undefined
    }

    if (userLoaded) {
      if (userId) {
        getPost();
      } else {
        // no userId (not logged in), set no post
        setPost(undefined);
      }
    }
  }, [user, userId, userLoaded]);

  /** Format the cutoff as Weekday MM/DD HH:MM:SS Time_zone. */
  function formatDateString(date, excludeDate) {
    var options = {};
    if (excludeDate) {
      options = {
        weekday: "long",
        hour: "2-digit",
        minute: "2-digit",
        second: "2-digit",
        hour12: false,
        timeZoneName: "short",
      };
    } else {
      options = {
        weekday: "long",
        month: "numeric",
        day: "numeric",
        hour: "2-digit",
        minute: "2-digit",
        second: "2-digit",
        hour12: false,
        timeZoneName: "short",
      };
    }

    const formattedDate = new Intl.DateTimeFormat("default", options).format(
      date
    );
    return formattedDate.replaceAll(",", "");
  }

  return (
    <>
      <Head>
        <title>recnet</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {userLoaded && post !== -1 && (
        <main className={styles.main}>
          {user ? (
            <>
              {post ? (
                <>
                  <Typography variant="h4" sx={fontStyles.bold}>
                    This week, you are recommending...
                  </Typography>
                  <PostCard post={post} />
                  <div
                    style={{
                      display: "flex",
                      flexDirection: "row",
                      justifyContent: "center",
                      alignItems: "center",
                      width: "100%",
                    }}
                  >
                    <Button
                      onClick={() => {
                        router.push(`/edit?postId=${post.id}`);
                      }}
                      variant="contained"
                      color="secondary"
                    >
                      Edit
                    </Button>

                    <Typography
                      variant="h6"
                      sx={{
                        ...fontStyles.regular,
                        margin: "1%",
                      }}
                    >
                      {" "}
                      anytime before {formatDateString(NEXT_CUTOFF)}
                    </Typography>
                  </div>
                </>
              ) : (
                <>
                  <Typography
                    variant="h1"
                    sx={{
                      ...fontStyles.bold,
                      padding: "1%",
                    }}
                  >
                    Hello, {user.displayName.split(" ")[0]}.
                  </Typography>
                  <Typography
                    variant="h6"
                    sx={{
                      ...fontStyles.regular,
                      paddingBottom: "3%",
                    }}
                  >
                    recommend a paper before{" "}
                    {formatDateString(NEXT_CUTOFF, true)} every week.
                  </Typography>
                  <Button
                    className={styles.recommendButton}
                    onClick={() => {
                      router.push("/edit");
                    }}
                    variant="contained"
                    color="secondary"
                  >
                    Recommend a paper üìù
                  </Button>
                </>
              )}
            </>
          ) : (
            <>
              <Typography
                variant="h1"
                sx={{
                  ...fontStyles.bold,
                  padding: "1%",
                }}
              >
                recnet
              </Typography>
              <Typography
                variant="h6"
                sx={{
                  ...fontStyles.regular,
                  paddingBottom: "3%",
                }}
              >
                receive weekly paper recs from researchers you follow.
              </Typography>
              <LoginButton />
            </>
          )}
        </main>
      )}
    </>
  );
}
